/*
 * This file is generated by jOOQ.
 */
package com.example.otrtesttask.db.tables.records;


import com.example.otrtesttask.db.tables.Employees;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeesRecord extends UpdatableRecordImpl<EmployeesRecord> implements Record5<Integer, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.employees.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.employees.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.employees.manager</code>.
     */
    public void setManager(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.employees.manager</code>.
     */
    public String getManager() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.employees.position</code>.
     */
    public void setPosition(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.employees.position</code>.
     */
    public String getPosition() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.employees.full_name</code>.
     */
    public void setFullName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.employees.full_name</code>.
     */
    public String getFullName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.employees.branch</code>.
     */
    public void setBranch(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.employees.branch</code>.
     */
    public String getBranch() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Employees.EMPLOYEES.ID;
    }

    @Override
    public Field<String> field2() {
        return Employees.EMPLOYEES.MANAGER;
    }

    @Override
    public Field<String> field3() {
        return Employees.EMPLOYEES.POSITION;
    }

    @Override
    public Field<String> field4() {
        return Employees.EMPLOYEES.FULL_NAME;
    }

    @Override
    public Field<String> field5() {
        return Employees.EMPLOYEES.BRANCH;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getManager();
    }

    @Override
    public String component3() {
        return getPosition();
    }

    @Override
    public String component4() {
        return getFullName();
    }

    @Override
    public String component5() {
        return getBranch();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getManager();
    }

    @Override
    public String value3() {
        return getPosition();
    }

    @Override
    public String value4() {
        return getFullName();
    }

    @Override
    public String value5() {
        return getBranch();
    }

    @Override
    public EmployeesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public EmployeesRecord value2(String value) {
        setManager(value);
        return this;
    }

    @Override
    public EmployeesRecord value3(String value) {
        setPosition(value);
        return this;
    }

    @Override
    public EmployeesRecord value4(String value) {
        setFullName(value);
        return this;
    }

    @Override
    public EmployeesRecord value5(String value) {
        setBranch(value);
        return this;
    }

    @Override
    public EmployeesRecord values(Integer value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeesRecord
     */
    public EmployeesRecord() {
        super(Employees.EMPLOYEES);
    }

    /**
     * Create a detached, initialised EmployeesRecord
     */
    public EmployeesRecord(Integer id, String manager, String position, String fullName, String branch) {
        super(Employees.EMPLOYEES);

        setId(id);
        setManager(manager);
        setPosition(position);
        setFullName(fullName);
        setBranch(branch);
    }
}
